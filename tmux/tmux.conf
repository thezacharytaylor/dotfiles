# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# Terminal multiplexer
# https://github.com/tmux/tmux
#
#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

# Use Vi mode
setw -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "${TERM}"
set -g default-terminal 'tmux-256color'
set -as terminal-features ',xterm*:RGB'

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# set-default colorset-option -ga terminal-overrides ",xterm-256color:Tc"

# Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

#--------------------------------------------------------------------------
# Status line
#--------------------------------------------------------------------------

# Status line customisation
# set-option -g status-left-length 100
# set-option -g status-right-length 100
# set-option -g status-left " #{session_name}"
# set-option -g status-right "#{pane_title} "
# set-option -g status-style "fg=#7C7D83 bg=#242631"
# set-option -g window-status-format "#{window_index}:#{pane_current_command}#{window_flags} "
# set-option -g window-status-current-format "#{window_index}:#{pane_current_command}#{window_flags} "
# set-option -g window-status-current-style "fg=#E9E9EA"
# set-option -g window-status-activity-style none
# set -g status-bg "#343F44"
# set -g status-fg white

# set -g status-position bottom
# set -g status-justify left
# set -g status-style 'bg=colour18 fg=white'
# set -g status-left ''
# set -g status-right '#[fg=#83C092,bg=#343f44]#[fg=#2D353B,bg=#83C092] #($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -v --interval 2) '
# # set -g status-right-length 50
# set -g status-left-length 20

# setw -g window-status-current-style 'fg=#3D484D bg=#A7C080 bold'
# setw -g window-status-current-format ' #I#[fg=#475258]:#[fg=#3D484D]#{pane_current_command}#[fg=#56635f]#F #[fg=#A7C080,bg=#343F44]'

# setw -g window-status-style 'fg=white bg=#475258'
# setw -g window-status-format ' #I#[fg=white]:#[fg=white]#{pane_current_command}#[fg=white]#F '

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix to Ctrl+Space
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# If prefix is 'C-a'
bind C-a send-prefix
bind a last-window

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

bind-key -r F new-window t
bind-key -r D run-shell "t ~/.dotfiles"

#--------------------------------------------------------------------------
# Plugins
#--------------------------------------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'macchiato'
# set -g @plugin 'dracula/tmux'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
# set -g @plugin 'tmux-plugins/tmux-net-speed'

# Catppuccin stuff
set -g @catppuccin_window_current_text "#{pane_current_path}"
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "

set -g @catppuccin_window_default_fill "none"

set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_status_modules_right "application session host"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"

# Dracula stuff
# set -g @dracula-plugins "cpu-usage ram-usage network-ping time"
# set -g @dracula-show-powerline true
# set -g @dracula-cpu-usage-colors "green dark_gray"
# set -g @dracula-show-flags true
# set -g @dracula-show-left-icon "󰔆"
# set -g @dracula-show-empty-plugins false
# set -g @dracula-cpu-usage-label ""
# set -g @dracula-ram-usage-label "󰽃"
# set -g @dracula-network-bandwidth wlan0
# set -g @dracula-show-timezone false
# set -g @dracula-military-time true

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
